import{O as e,p as t,u as n}from"./chunks/runtime-core.esm-bundler.DoAIpvg0.js";import{t as r}from"./chunks/plugin-vue_export-helper.BIFBW11O.js";const i=JSON.parse(`{"title":"Automatic Fixes","description":"","frontmatter":{"outline":[2,3],"head":[["meta",{"property":"og:title","content":"Automatic Fixes"}],["meta",{"name":"twitter:title","content":"Automatic Fixes"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/linter/automatic-fixes.html"}]]},"headers":[],"relativePath":"docs/guide/usage/linter/automatic-fixes.md","filePath":"docs/guide/usage/linter/automatic-fixes.md"}`);var a={name:`docs/guide/usage/linter/automatic-fixes.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,[...i[0]||=[t(`<h1 id="automatic-fixes" tabindex="-1">Automatic Fixes <a class="header-anchor" href="#automatic-fixes" aria-label="Permalink to “Automatic Fixes”">​</a></h1><p>In some cases, Oxlint is able to automatically fix lint violations in your code. There are two categories of automatic fixes:</p><ul><li><strong>Fixes</strong>: These are changes that will not change your program&#39;s behavior. It is generally safe to run them in a pre-lint hook.</li><li><strong>Suggestions</strong>: Changes that may change your program&#39;s behavior or make a change you may not want (e.g. removing <code>console.log</code>s). These should be reviewed before being committed to your codebase.</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   # Safe fixes only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-suggestions</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Safe suggestions only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-suggestions</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Safe fixes and suggestions</span></span></code></pre></div><p>You can find which rules are fixable from the <a href="./rules.html">rules page</a>.</p><h2 id="dangerous-fixes-and-suggestions" tabindex="-1">Dangerous Fixes and Suggestions <a class="header-anchor" href="#dangerous-fixes-and-suggestions" aria-label="Permalink to “Dangerous Fixes and Suggestions”">​</a></h2><p>Some fixes and suggestions are considered dangerous. Being more aggressive in nature, <strong>these may produce invalid code and/or change the behavior of your program</strong>. These are disabled by default and can be enabled with the <code>--fix-dangerously</code> flag. You should review each change carefully before committing it to your codebase.</p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>If you are using git, you should stage your changes before running any of the commands below using <code>git add -A</code>.</p></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Safe and dangerous fixes only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-dangerously</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Safe and dangerous suggestions only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-suggestions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-dangerously</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Applies all possible fixes and suggestions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-suggestions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fix-dangerously</span></span></code></pre></div><h2 id="pending-fixes" tabindex="-1">Pending Fixes <a class="header-anchor" href="#pending-fixes" aria-label="Permalink to “Pending Fixes”">​</a></h2><p>You may notice that some rules have a 🚧 next to their name. This indicate that they could be automatically fixed, but they are missing an auto-fixer implementation. You can help improve Oxlint by contributing an auto fixer for rules that need them.</p>`,11)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};