import{O as e,p as t,u as n}from"./chunks/runtime-core.esm-bundler.C80uTydv.js";import{t as r}from"./chunks/plugin-vue_export-helper.DTeiOEMk.js";const i=JSON.parse(`{"title":"Test Infrastructure","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Test Infrastructure"}],["meta",{"name":"twitter:title","content":"Test Infrastructure"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/learn/architecture/test.html"}]]},"headers":[],"relativePath":"docs/learn/architecture/test.md","filePath":"docs/learn/architecture/test.md"}`);var a={name:`docs/learn/architecture/test.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,[...i[0]||=[t(`<h1 id="test-infrastructure" tabindex="-1">Test Infrastructure <a class="header-anchor" href="#test-infrastructure" aria-label="Permalink to “Test Infrastructure”">​</a></h1><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>This article serves as an invitation for sharing ideas to improve our test infrastructure, feel free to contact us on <a href="https://discord.gg/9uXCAwqQZW" target="_blank" rel="noreferrer">Discord</a>.</p></div><p>In Oxc, correctness and reliability are taken extremely seriously.</p><p>We spend a great deal of time strengthening the test infrastructure to prevent problems from propagating to downstream tools.</p><h2 id="parser" tabindex="-1">Parser <a class="header-anchor" href="#parser" aria-label="Permalink to “Parser”">​</a></h2><h3 id="conformance" tabindex="-1">Conformance <a class="header-anchor" href="#conformance" aria-label="Permalink to “Conformance”">​</a></h3><p>Parser tests from <a href="https://github.com/tc39/test262" target="_blank" rel="noreferrer">Test262</a>, <a href="https://github.com/babel/babel" target="_blank" rel="noreferrer">Babel</a>, and <a href="https://github.com/microsoft/TypeScript" target="_blank" rel="noreferrer">TypeScript</a> are used to test JavaScript, TypeScript, and JSX syntax.</p><p>For Test262, all stage 4 and regular expression tests are included.</p><p>All conformance results are stored in a snapshot file for tracking changes:</p><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/tasks/coverage/parser_test262.snap" target="_blank" rel="noreferrer">test262.snap</a>, reporting <code>43765/43765 (100.00%)</code>.</li><li><a href="https://github.com/oxc-project/oxc/blob/main/tasks/coverage/parser_babel.snap" target="_blank" rel="noreferrer">babel.snap</a>, reporting <code>2093/2101 (99.62%)</code>.</li><li><a href="https://github.com/oxc-project/oxc/blob/main/tasks/coverage/parser_typescript.snap" target="_blank" rel="noreferrer">typescript.snap</a>, reporting <code>6470/6479 (99.86%)</code>.</li></ul><p>All syntax errors are written to these snapshot files for diffing changes.</p><h3 id="fuzzing" tabindex="-1">Fuzzing <a class="header-anchor" href="#fuzzing" aria-label="Permalink to “Fuzzing”">​</a></h3><p>To ensure that the parser does not panic when encountering random data, three fuzzers are used:</p><ol><li><a href="https://github.com/rust-fuzz/cargo-fuzz" target="_blank" rel="noreferrer">cargo fuzz</a> for <a href="https://github.com/oxc-project/oxc-fuzz-parser/blob/main/fuzz/fuzz_targets/parser.rs" target="_blank" rel="noreferrer">sending random bytes</a> to the parser.</li><li><a href="https://github.com/shapesecurity/shift-fuzzer-js" target="_blank" rel="noreferrer">shift-fuzzer-js</a> by <a href="https://github.com/bakkot" target="_blank" rel="noreferrer">bakkot</a> for producing random but valid ASTs.</li><li><a href="https://github.com/qarmin/Automated-Fuzzer" target="_blank" rel="noreferrer">Automated-Fuzzer</a> by <a href="https://github.com/qarmin" target="_blank" rel="noreferrer">qarmin</a>, which <a href="https://github.com/oxc-project/oxc/issues?q=is%3Aissue+author%3Aqarmin+" target="_blank" rel="noreferrer">actively reports</a> crashes.</li></ol><h3 id="memory-safety" tabindex="-1">Memory Safety <a class="header-anchor" href="#memory-safety" aria-label="Permalink to “Memory Safety”">​</a></h3><p>Oxc uses an arena allocator based around <a href="https://docs.rs/bumpalo/latest/bumpalo" target="_blank" rel="noreferrer"><code>bumpalo</code></a> as the memory allocator for its AST, and other data. None of the AST node types have a <code>Drop</code> implementation. This is enforced at compile time by Oxc&#39;s allocator, which causes a compile-time error if any code attempts to allocate types in the arena which are <code>Drop</code>.This statically ensures that types which own heap-allocated data cannot be stored in the arena, which would result in memory leaks.</p><h3 id="unsafe-code" tabindex="-1">Unsafe code <a class="header-anchor" href="#unsafe-code" aria-label="Permalink to “Unsafe code”">​</a></h3><p>Oxc uses <code>unsafe</code> code for performance optimizations. We aim to contain <code>unsafe</code> to within self-contained data structures which present safe APIs externally. Miri <a href="https://github.com/oxc-project/oxc/actions/workflows/miri.yml" target="_blank" rel="noreferrer">is run</a> on the crates containing these structures on every PR.</p><h2 id="linter" tabindex="-1">Linter <a class="header-anchor" href="#linter" aria-label="Permalink to “Linter”">​</a></h2><h3 id="snapshot-diagnostics" tabindex="-1">Snapshot Diagnostics <a class="header-anchor" href="#snapshot-diagnostics" aria-label="Permalink to “Snapshot Diagnostics”">​</a></h3><p>All linter diagnostics are written to a <a href="https://github.com/oxc-project/oxc/tree/main/crates/oxc_linter/src/snapshots" target="_blank" rel="noreferrer">snapshot file</a> for testing against regressions.</p><p>For example:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ⚠ typescript</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(adjacent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">overload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">signatures): All </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> signatures should be adjacent.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╭─[adjacent_overload_signatures.tsx:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ·                  ───</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ·                  ───</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │       }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╰────</span></span></code></pre></div><h3 id="ecosystem-ci" tabindex="-1">Ecosystem CI <a class="header-anchor" href="#ecosystem-ci" aria-label="Permalink to “Ecosystem CI”">​</a></h3><p><a href="https://github.com/oxc-project/oxlint-ecosystem-ci" target="_blank" rel="noreferrer">oxlint-ecosystem-ci</a> runs <code>oxlint</code> against large repositories to check for false positives, regressions, and panics. The repositories tested include:</p><ul><li><a href="https://github.com/rolldown-rs/rolldown" target="_blank" rel="noreferrer">rolldown/rolldown</a></li><li><a href="https://github.com/napi-rs/napi-rs" target="_blank" rel="noreferrer">napi-rs/napi-rs</a></li><li><a href="https://github.com/toeverything/affine" target="_blank" rel="noreferrer">toeverything/affine</a></li><li><a href="https://github.com/preactjs/preact" target="_blank" rel="noreferrer">preactjs/preact</a></li><li><a href="https://github.com/microsoft/vscode" target="_blank" rel="noreferrer">microsoft/vscode</a></li><li><a href="https://github.com/bbc/simorgh" target="_blank" rel="noreferrer">bbc/simorgh</a></li><li><a href="https://github.com/elastic/kibana" target="_blank" rel="noreferrer">elastic/kibana</a></li><li><a href="https://github.com/DefinitelyTyped/DefinitelyTyped" target="_blank" rel="noreferrer">DefinitelyTyped/DefinitelyTyped</a></li></ul><h2 id="idempotency" tabindex="-1">Idempotency <a class="header-anchor" href="#idempotency" aria-label="Permalink to “Idempotency”">​</a></h2><p>Idempotency testing is used for integration tests and end-to-end tests on all tools.</p><p>An idempotency test follows this procedure:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> printed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sourceText);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> printed2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(printed);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(printed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> printed2);</span></span></code></pre></div><p>For example, idempotently minifying a piece of code should yield the same result.</p><p>All tools (parser, transformer, minifer, etc.) are idempotently tested on Test262, Babel and TypeScript test files.</p><h2 id="integration-tests" tabindex="-1">Integration Tests <a class="header-anchor" href="#integration-tests" aria-label="Permalink to “Integration Tests”">​</a></h2><p>Integration tests are preferred over unit tests.</p><p><a href="https://app.codecov.io/gh/oxc-project/oxc" target="_blank" rel="noreferrer">codecov</a> currently reports <span style="display:inline-block;"><a href="https://codecov.io/gh/oxc-project/oxc" target="_blank" rel="noreferrer"><img src="https://codecov.io/github/oxc-project/oxc/branch/main/graph/badge.svg" alt="Code Coverage"></a></span> line coverage.</p><h2 id="end-to-end" tabindex="-1">End to End <a class="header-anchor" href="#end-to-end" aria-label="Permalink to “End to End”">​</a></h2><p>The repository <a href="https://github.com/oxc-project/monitor-oxc" target="_blank" rel="noreferrer">monitor-oxc</a> performs end-to-end tests against the top 3000 npm packages from <a href="https://github.com/wooorm/npm-high-impact" target="_blank" rel="noreferrer">npm-high-impact</a>.</p><p>Its <code>package.json</code> has 3000 dependencies:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;@aashutoshrathi/word-wrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;@actions/http-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;@adobe/css-tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;@alloc/quick-lru&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;zip-stream&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;zod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;zone.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;zustand&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>And a test file that imports these packages and asserts the import:</p><p><code>src/dynamic.test.mjs</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> assert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:assert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@aashutoshrathi/word-wrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@aashutoshrathi/word-wrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@actions/http-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@actions/http-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@adobe/css-tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@adobe/css-tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@alloc/quick-lru&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@alloc/quick-lru&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zone.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zone.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zustand&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zustand&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zwitch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zwitch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert.ok));</span></span></code></pre></div><p>This test file is run after each of the tools (codegen, transformer, minifier, etc.) rewrites all the files in <code>node_modules</code>.</p><p>The packages are updated to their latest versions daily.</p><p>This setup has caught many obscure bugs that the conformance test suites missed.</p><hr><p>If you any ideas on how to improve our test infrastructure, feel free to contact us on <a href="https://discord.gg/9uXCAwqQZW" target="_blank" rel="noreferrer">Discord</a>.</p>`,47)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};