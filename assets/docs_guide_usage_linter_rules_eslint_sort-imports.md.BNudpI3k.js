import{M as e,O as t,h as n,m as r,p as i,s as a,u as o,z as s}from"./chunks/runtime-core.esm-bundler.DoAIpvg0.js";import{t as c}from"./chunks/version.data.C4jrnMtZ.js";var l={id:`eslint-sort-imports`,tabindex:`-1`},u={class:`rule-meta`};const d=JSON.parse(`{"title":"eslint/sort-imports","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"eslint/sort-imports"}],["meta",{"name":"twitter:title","content":"eslint/sort-imports"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-imports.html"}]]},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/sort-imports.md","filePath":"docs/guide/usage/linter/rules/eslint/sort-imports.md"}`);var f=Object.assign({name:`docs/guide/usage/linter/rules/eslint/sort-imports.md`},{setup(d){let f=`https://github.com/oxc-project/oxc/blob/${c}/crates/oxc_linter/src/rules/eslint/sort_imports.rs`;return(c,d)=>{let p=e(`Badge`),m=e(`Alert`);return t(),o(`div`,null,[a(`h1`,l,[d[0]||=r(`eslint/sort-imports `,-1),n(p,{type:`info`,text:`Style`}),d[1]||=r(),d[2]||=a(`a`,{class:`header-anchor`,href:`#eslint-sort-imports`,"aria-label":`Permalink to ‚Äúeslint/sort-imports‚Äù`},`‚Äã`,-1)]),a(`div`,u,[n(m,{class:`fix`,type:`info`},{default:s(()=>[...d[3]||=[a(`span`,{class:`emoji`},`üõ†Ô∏è`,-1),r(` An auto-fix is available for this rule for some violations. `,-1)]]),_:1})]),d[4]||=i(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to ‚ÄúWhat it does‚Äù">‚Äã</a></h3><p>This rule checks all import declarations and verifies that all imports are first sorted by the used member syntax and then alphabetically by the first member or alias name.</p><p>When declaring multiple imports, a sorted list of import declarations make it easier for developers to read the code and find necessary imports later.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to ‚ÄúWhy is this bad?‚Äù">‚Äã</a></h3><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to ‚ÄúExamples‚Äù">‚Äã</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { a, b, c } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foo.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bar.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foo.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to ‚ÄúConfiguration‚Äù">‚Äã</a></h2><p>This rule accepts a configuration object with the following properties:</p><h3 id="allowseparatedgroups" tabindex="-1">allowSeparatedGroups <a class="header-anchor" href="#allowseparatedgroups" aria-label="Permalink to ‚ÄúallowSeparatedGroups‚Äù">‚Äã</a></h3><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>When <code>true</code>, the rule allows import groups separated by blank lines to be treated independently.</p><h3 id="ignorecase" tabindex="-1">ignoreCase <a class="header-anchor" href="#ignorecase" aria-label="Permalink to ‚ÄúignoreCase‚Äù">‚Äã</a></h3><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>When <code>true</code>, the rule ignores case-sensitivity when sorting import names.</p><h3 id="ignoredeclarationsort" tabindex="-1">ignoreDeclarationSort <a class="header-anchor" href="#ignoredeclarationsort" aria-label="Permalink to ‚ÄúignoreDeclarationSort‚Äù">‚Äã</a></h3><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>When <code>true</code>, the rule ignores the sorting of import declarations (the order of <code>import</code> statements).</p><h3 id="ignoremembersort" tabindex="-1">ignoreMemberSort <a class="header-anchor" href="#ignoremembersort" aria-label="Permalink to ‚ÄúignoreMemberSort‚Äù">‚Äã</a></h3><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>When <code>true</code>, the rule ignores the sorting of import members within a single import declaration.</p><h3 id="membersyntaxsortorder" tabindex="-1">memberSyntaxSortOrder <a class="header-anchor" href="#membersyntaxsortorder" aria-label="Permalink to ‚ÄúmemberSyntaxSortOrder‚Äù">‚Äã</a></h3><p>type: <code>array</code></p><p>Specifies the sort order of different import syntaxes.</p><h4 id="membersyntaxsortorder-n" tabindex="-1">memberSyntaxSortOrder[n] <a class="header-anchor" href="#membersyntaxsortorder-n" aria-label="Permalink to ‚ÄúmemberSyntaxSortOrder[n]‚Äù">‚Äã</a></h4><p>type: <code>&quot;none&quot; | &quot;all&quot; | &quot;multiple&quot; | &quot;single&quot;</code></p><h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to ‚ÄúHow to use‚Äù">‚Äã</a></h2><p>To <strong>enable</strong> this rule in the CLI or using the config file, you can use:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-100" id="tab-101" checked><label data-title="CLI" for="tab-101">CLI</label><input type="radio" name="group-100" id="tab-102"><label data-title="Config (.oxlintrc.json)" for="tab-102">Config (.oxlintrc.json)</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --deny</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sort-imports</span></span></code></pre></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;sort-imports&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to ‚ÄúReferences‚Äù">‚Äã</a></h2>`,34),a(`ul`,null,[a(`li`,null,[a(`a`,{href:f,target:`_blank`,rel:`noreferrer`},`Rule Source`)])])])}}});export{d as __pageData,f as default};