import{M as e,O as t,h as n,m as r,p as i,s as a,u as o}from"./chunks/runtime-core.esm-bundler.DoAIpvg0.js";import{t as s}from"./chunks/plugin-vue_export-helper.BIFBW11O.js";const c=JSON.parse(`{"title":"Parser","description":"","frontmatter":{"title":"Parser","outline":"deep","head":[["meta",{"property":"og:title","content":"Parser"}],["meta",{"name":"twitter:title","content":"Parser"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/parser.html"}]]},"headers":[],"relativePath":"docs/guide/usage/parser.md","filePath":"docs/guide/usage/parser.md"}`);var l={name:`docs/guide/usage/parser.md`};function u(s,c,l,u,d,f){let p=e(`AppBadgeList`);return t(),o(`div`,null,[c[0]||=a(`h1`,{id:`parser`,tabindex:`-1`},[r(`Parser `),a(`a`,{class:`header-anchor`,href:`#parser`,"aria-label":`Permalink to “Parser”`},`​`)],-1),n(p),c[1]||=i(`<p>This is production ready.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to “Features”">​</a></h2><ul><li>3x faster than swc parser (<a href="https://github.com/oxc-project/bench-javascript-parser-written-in-rust" target="_blank" rel="noreferrer">benchmark</a>).</li><li>Parses <code>.js(x)</code> and <code>.ts(x)</code>.</li><li>Passes all parser tests from Test262 and 99% from Babel and TypeScript.</li><li>Returns ESM information directly, no need for <a href="https://github.com/guybedford/es-module-lexer" target="_blank" rel="noreferrer"><code>es-module-lexer</code></a>.</li><li><a href="https://x.com/robpalmer2/status/1805502964435505559" target="_blank" rel="noreferrer">✅ works with checker.ts</a></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to “Installation”">​</a></h2><h3 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to “Node.js”">​</a></h3><ul><li>Use the node binding <a href="https://www.npmjs.com/package/oxc-parser" target="_blank" rel="noreferrer">oxc-parser</a>.</li><li>Try on <a href="https://stackblitz.com/edit/oxc-parser" target="_blank" rel="noreferrer">stackblitz</a>.</li></ul><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to “Rust”">​</a></h3><p>Use the umbrella crate <a href="https://docs.rs/oxc" target="_blank" rel="noreferrer">oxc</a> or the individual <a href="https://docs.rs/oxc_ast" target="_blank" rel="noreferrer">oxc_ast</a> and <a href="https://docs.rs/oxc_parser" target="_blank" rel="noreferrer">oxc_parser</a> crates.</p><p>Rust usage example can be found <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_parser/examples/parser.rs" target="_blank" rel="noreferrer">here</a>.</p>`,9)])}var d=s(l,[[`render`,u]]);export{c as __pageData,d as default};