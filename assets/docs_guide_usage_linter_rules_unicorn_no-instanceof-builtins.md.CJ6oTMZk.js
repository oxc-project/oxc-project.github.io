import{M as e,O as t,h as n,m as r,p as i,s as a,u as o,z as s}from"./chunks/runtime-core.esm-bundler.C80uTydv.js";import{t as c}from"./chunks/version.data.DDlH6QMD.js";var l={id:`unicorn-no-instanceof-builtins`,tabindex:`-1`},u={class:`rule-meta`};const d=JSON.parse(`{"title":"unicorn/no-instanceof-builtins","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"unicorn/no-instanceof-builtins"}],["meta",{"name":"twitter:title","content":"unicorn/no-instanceof-builtins"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.html"}]]},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.md","filePath":"docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.md"}`);var f=Object.assign({name:`docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.md`},{setup(d){let f=`https://github.com/oxc-project/oxc/blob/${c}/crates/oxc_linter/src/rules/unicorn/no_instanceof_builtins.rs`;return(c,d)=>{let p=e(`Badge`),m=e(`Alert`);return t(),o(`div`,null,[a(`h1`,l,[d[0]||=r(`unicorn/no-instanceof-builtins `,-1),n(p,{type:`info`,text:`Suspicious`}),d[1]||=r(),d[2]||=a(`a`,{class:`header-anchor`,href:`#unicorn-no-instanceof-builtins`,"aria-label":`Permalink to “unicorn/no-instanceof-builtins”`},`​`,-1)]),a(`div`,u,[n(m,{class:`fix`,type:`info`},{default:s(()=>[...d[3]||=[a(`span`,{class:`emoji`},`🚧`,-1),r(` An auto-fix is still under development. `,-1)]]),_:1})]),d[4]||=i(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to “What it does”">​</a></h3><p>Disallows the use of <code>instanceof</code> with ECMAScript built-in constructors because:</p><ul><li>it breaks across execution contexts (<code>iframe</code>, Web Worker, Node VM, etc.);</li><li>it is often misleading (e.g. <code>instanceof Array</code> fails for a subclass);</li><li>there is always a clearer and safer alternative (<code>Array.isArray</code>, <code>typeof</code>, <code>Buffer.isBuffer</code>, …).</li></ul><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to “Why is this bad?”">​</a></h3><p><code>instanceof</code> breaks across execution contexts (<code>iframe</code>, Web Worker, Node <code>vm</code>), and may give misleading results for subclasses or exotic objects.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to “Examples”">​</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { … }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (el </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { … }</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)) { … }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (el?.nodeType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { … }</span></span></code></pre></div><h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to “How to use”">​</a></h2><p>To <strong>enable</strong> this rule in the CLI or using the config file, you can use:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-52" id="tab-53" checked><label data-title="CLI" for="tab-53">CLI</label><input type="radio" name="group-52" id="tab-54"><label data-title="Config (.oxlintrc.json)" for="tab-54">Config (.oxlintrc.json)</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --deny</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unicorn/no-instanceof-builtins</span></span></code></pre></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;unicorn/no-instanceof-builtins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to “References”">​</a></h2>`,14),a(`ul`,null,[a(`li`,null,[a(`a`,{href:f,target:`_blank`,rel:`noreferrer`},`Rule Source`)])])])}}});export{d as __pageData,f as default};