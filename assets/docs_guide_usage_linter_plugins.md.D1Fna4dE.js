import{O as e,p as t,u as n}from"./chunks/runtime-core.esm-bundler.DoAIpvg0.js";import{t as r}from"./chunks/plugin-vue_export-helper.BIFBW11O.js";const i=JSON.parse(`{"title":"Plugins","description":"","frontmatter":{"outline":[2,3],"head":[["meta",{"property":"og:title","content":"Plugins"}],["meta",{"name":"twitter:title","content":"Plugins"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/linter/plugins.html"}]]},"headers":[],"relativePath":"docs/guide/usage/linter/plugins.md","filePath":"docs/guide/usage/linter/plugins.md"}`);var a={name:`docs/guide/usage/linter/plugins.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,[...i[0]||=[t(`<h1 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to “Plugins”">​</a></h1><p>Oxlint supports several of the most popular ESLint plugins out of the box with most rules in <code>recommended</code> configs already implemented.</p><p>Oxlint also supports <a href="/docs/guide/usage/linter/js-plugins.html">plugins written in JS</a>.</p><h2 id="enabling-plugins" tabindex="-1">Enabling Plugins <a class="header-anchor" href="#enabling-plugins" aria-label="Permalink to “Enabling Plugins”">​</a></h2><p>You can enable plugins using the <code>--&lt;plugin-name&gt;-plugin</code> CLI flag. For example, to enable <code>eslint-plugin-import</code>, run</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --import-plugin</span></span></code></pre></div><p>Once enabled, rules in categories you have enabled will automatically be turned on. For example,</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --import-plugin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> correctness</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -W</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> suspicious</span></span></code></pre></div><p>From the import plugin, this will enable all <code>correctness</code> rules as errors and <code>suspicious</code> rules as warnings, plus the rules from the base rule set. Note that <code>correctness</code> rules are turned on by default.</p><h3 id="enabling-plugins-in-a-configuration-file" tabindex="-1">Enabling plugins in a configuration file <a class="header-anchor" href="#enabling-plugins-in-a-configuration-file" aria-label="Permalink to “Enabling plugins in a configuration file”">​</a></h3><p>You can also enable plugins in a configuration file by adding the <code>plugins</code> field. For example, to enable <code>eslint-plugin-import</code>, add the following to your <code>.oxlintrc.json</code> file:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Setting the <code>plugins</code> field will <strong>overwrite</strong> the base set of plugins. The plugins array should reflect all of the plugins you want to use.</p></div><h2 id="disabling-plugins" tabindex="-1">Disabling Plugins <a class="header-anchor" href="#disabling-plugins" aria-label="Permalink to “Disabling Plugins”">​</a></h2><p>Several plugins are enabled by default, and are listed below. You can disable them with the <code>--disable-&lt;plugin-name&gt;-plugin</code> flag. For example, to disable <code>eslint-plugin-unicorn</code>, run:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-unicorn-plugin</span></span></code></pre></div><p>Only default plugins support being disabled, as other plugins can be omitted simply by not enabling them.</p><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>run <code>oxlint --help</code> to see a full list of flags to enable or disable plugins.</p></div><h3 id="disabling-plugins-in-a-configuration-file" tabindex="-1">Disabling plugins in a configuration file <a class="header-anchor" href="#disabling-plugins-in-a-configuration-file" aria-label="Permalink to “Disabling plugins in a configuration file”">​</a></h3><p>You can also disable default plugins in a configuration file by simply adding an empty array to the <code>plugins</code> field.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This configuration will disable all default plugins and only use the base set of rules.</p><h2 id="supported-plugins" tabindex="-1">Supported Plugins <a class="header-anchor" href="#supported-plugins" aria-label="Permalink to “Supported Plugins”">​</a></h2><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>You can also find this information on the <a href="https://github.com/oxc-project/oxc/issues/481" target="_blank" rel="noreferrer"><code>linter product plan</code></a> issue on GitHub.</p></div><table tabindex="0"><thead><tr><th>Plugin Name</th><th>Default?</th><th>Issue</th><th>Notes</th></tr></thead><tbody><tr><td><code>eslint</code></td><td>✅</td><td><a href="https://github.com/oxc-project/oxc/issues/479" target="_blank" rel="noreferrer">#479</a></td><td>Rules from <a href="https://eslint.org/docs/latest/rules/" target="_blank" rel="noreferrer"><code>eslint</code></a> (core)</td></tr><tr><td><code>typescript</code></td><td>✅</td><td><a href="https://github.com/oxc-project/oxc/issues/2180" target="_blank" rel="noreferrer">#2180</a></td><td>TypeScript-specific rules from <a href="https://typescript-eslint.io/rules/" target="_blank" rel="noreferrer"><code>@typescript-eslint</code></a>. Type-aware rules are supported in preview (use <code>--type-aware</code> flag).</td></tr><tr><td><code>unicorn</code></td><td>✅</td><td><a href="https://github.com/oxc-project/oxc/issues/684" target="_blank" rel="noreferrer">#684</a></td><td>Rules from <a href="https://github.com/sindresorhus/eslint-plugin-unicorn" target="_blank" rel="noreferrer"><code>eslint-plugin-unicorn</code></a></td></tr><tr><td><code>react</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/1022" target="_blank" rel="noreferrer">#1022</a>, <a href="https://github.com/oxc-project/oxc/issues/2174" target="_blank" rel="noreferrer">#2174</a></td><td>Rules from <a href="https://www.npmjs.com/package/eslint-plugin-react" target="_blank" rel="noreferrer"><code>eslint-plugin-react</code></a> and <a href="https://www.npmjs.com/package/eslint-plugin-react-hooks" target="_blank" rel="noreferrer"><code>eslint-plugin-react-hooks</code></a></td></tr><tr><td><code>react-perf</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/2041" target="_blank" rel="noreferrer">#2041</a></td><td>Rules from <a href="https://github.com/cvazac/eslint-plugin-react-perf" target="_blank" rel="noreferrer"><code>eslint-plugin-react-perf</code></a></td></tr><tr><td><code>nextjs</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/1929" target="_blank" rel="noreferrer">#1929</a></td><td>Rules from <a href="https://nextjs.org/docs/pages/building-your-application/configuring/eslint#eslint-plugin" target="_blank" rel="noreferrer"><code>eslint-plugin-next</code></a></td></tr><tr><td><code>oxc</code></td><td>✅</td><td>N/A</td><td>Custom oxc-specific rules, as well as some rules ported from <a href="https://deepscan.io/" target="_blank" rel="noreferrer">deepscan</a></td></tr><tr><td><code>import</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/1117" target="_blank" rel="noreferrer">#1117</a></td><td>Rules from <a href="https://github.com/import-js/eslint-plugin-import" target="_blank" rel="noreferrer"><code>eslint-plugin-import</code></a></td></tr><tr><td><code>jsdoc</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/1170" target="_blank" rel="noreferrer">#1170</a></td><td>Rules from <a href="https://github.com/gajus/eslint-plugin-jsdoc" target="_blank" rel="noreferrer"><code>eslint-plugin-jsdoc</code></a></td></tr><tr><td><code>jsx-a11y</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/1141" target="_blank" rel="noreferrer">#1141</a></td><td>Rules from <a href="https://github.com/jsx-eslint/eslint-plugin-jsx-a11y" target="_blank" rel="noreferrer"><code>eslint-plugin-jsx-a11y</code></a></td></tr><tr><td><code>node</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/493" target="_blank" rel="noreferrer">#493</a></td><td>Rules from <a href="https://github.com/eslint-community/eslint-plugin-n" target="_blank" rel="noreferrer"><code>eslint-plugin-n</code></a></td></tr><tr><td><code>promise</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/4655" target="_blank" rel="noreferrer">#4655</a></td><td>Rules from <a href="https://github.com/eslint-community/eslint-plugin-promise" target="_blank" rel="noreferrer"><code>eslint-plugin-promise</code></a></td></tr><tr><td><code>jest</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/492" target="_blank" rel="noreferrer">#492</a></td><td>Rules from <a href="https://github.com/jest-community/eslint-plugin-jest" target="_blank" rel="noreferrer"><code>eslint-plugin-jest</code></a></td></tr><tr><td><code>vitest</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/4656" target="_blank" rel="noreferrer">#4656</a></td><td>Rules from <a href="https://github.com/vitest-dev/eslint-plugin-vitest" target="_blank" rel="noreferrer"><code>eslint-plugin-vitest</code></a></td></tr><tr><td><code>vue</code></td><td></td><td><a href="https://github.com/oxc-project/oxc/issues/11440" target="_blank" rel="noreferrer">#11440</a></td><td>Rules from <a href="https://github.com/vuejs/eslint-plugin-vue" target="_blank" rel="noreferrer"><code>eslint-plugin-vue</code></a> that work with <code>&lt;script&gt;</code> tags</td></tr></tbody></table><h2 id="adding-new-plugins" tabindex="-1">Adding New Plugins <a class="header-anchor" href="#adding-new-plugins" aria-label="Permalink to “Adding New Plugins”">​</a></h2><p>Do you have a favorite ESLint plugin that you&#39;d like to see supported in Oxlint? Please open <a href="https://github.com/oxc-project/oxc/issues/new?assignees=&amp;labels=C-enhancement%2CA-linter&amp;projects=&amp;template=feature_request.md&amp;title=linter:%20support%20my%20favorite%20plugin" target="_blank" rel="noreferrer">a feature request</a>. Please be aware that for plugins that require special parsers, such as <code>eslint-plugin-vue</code> and <code>eslint-plugin-svelte</code>, we only support linting the <code>&lt;script&gt;</code> sections of those files.</p>`,27)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};