import{O as e,p as t,u as n}from"./chunks/runtime-core.esm-bundler.DUsM2pzQ.js";import{t as r}from"./chunks/plugin-vue_export-helper.DbjsT2lH.js";const i=JSON.parse(`{"title":"Getting Started","description":"","frontmatter":{"title":"Getting Started","outline":"deep","head":[["meta",{"property":"og:title","content":"Getting Started"}],["meta",{"name":"twitter:title","content":"Getting Started"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/introduction.html"}]]},"headers":[],"relativePath":"docs/guide/introduction.md","filePath":"docs/guide/introduction.md"}`);var a={name:`docs/guide/introduction.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,[...i[0]||=[t(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to “Getting Started”">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to “Overview”">​</a></h2><p>Oxc (each letter is individually pronounced, <code>/oh-eks-see/</code>) is the JavaScript Oxidation Compiler, a collection of high-performance tools for the JavaScript language written in Rust.</p><p>Our focus lies in constructing essential compiler tools for JavaScript: parser, linter, formatter, transpiler, minifier and resolver.</p><p>Our goal is to empower the <a href="https://voidzero.dev/posts/announcing-voidzero-inc" target="_blank" rel="noreferrer">next generation toolchain for JavaScript</a> as part of <a href="https://voidzero.dev" target="_blank" rel="noreferrer">VoidZero</a>.</p><h2 id="endorsements" tabindex="-1">Endorsements <a class="header-anchor" href="#endorsements" aria-label="Permalink to “Endorsements”">​</a></h2><h4 id="evan-you-creator-of-vue-js-and-vite" tabindex="-1"><a href="https://x.com/youyuxi/status/1734439543280128030" target="_blank" rel="noreferrer">Evan You</a>, creator of <a href="https://vuejs.org" target="_blank" rel="noreferrer">Vue.js</a> and <a href="https://vitejs.dev" target="_blank" rel="noreferrer">Vite</a>: <a class="header-anchor" href="#evan-you-creator-of-vue-js-and-vite" aria-label="Permalink to “Evan You, creator of Vue.js and Vite:”">​</a></h4><blockquote><p>Ran oxlint on the Vue 3 codebase, ~200 rules + ~590 files finished in 50ms 🤯 (30ms re-runs)</p><p>The performance is absolutely nuts</p></blockquote><h4 id="jason-miller-creator-of-preact" tabindex="-1"><a href="https://github.com/developit" target="_blank" rel="noreferrer">Jason Miller</a>, creator of <a href="https://preactjs.com" target="_blank" rel="noreferrer">Preact</a>: <a class="header-anchor" href="#jason-miller-creator-of-preact" aria-label="Permalink to “Jason Miller, creator of Preact:”">​</a></h4><blockquote><p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p><p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p><p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p></blockquote><h4 id="luke-edwards" tabindex="-1"><a href="https://x.com/lukeed05/status/1829527267162345651" target="_blank" rel="noreferrer">Luke Edwards</a> <a class="header-anchor" href="#luke-edwards" aria-label="Permalink to “Luke Edwards”">​</a></h4><blockquote><p>For a while now, @boshen_c has been crushing it, setting the foundation for the next generation of JS tooling.</p><p>There&#39;s just so much to learn from the OXC source code. Everything is meticulously measured and benchmarked, then formalized into simple, elegant, non-frightening APIs.</p><p>This guy is brilliant, a team player, and is + has been doing thankless, hard work.</p></blockquote><h4 id="yagiz-nizipli-founder-of-node-js-performance-team" tabindex="-1"><a href="https://github.com/sponsors/anonrig" target="_blank" rel="noreferrer">Yagiz Nizipli</a>, founder of <a href="https://github.com/nodejs/performance" target="_blank" rel="noreferrer">Node.js performance team</a>: <a class="header-anchor" href="#yagiz-nizipli-founder-of-node-js-performance-team" aria-label="Permalink to “Yagiz Nizipli, founder of Node.js performance team:”">​</a></h4><blockquote><p>I&#39;m impressed by how oxc is actively encouraging JavaScript tools to improve their performance.</p></blockquote><h4 id="eric-simons-ceo-of-stackblitz" tabindex="-1"><a href="https://x.com/ericsimons40/status/1766525300584947999" target="_blank" rel="noreferrer">Eric Simons</a>, CEO of <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a>: <a class="header-anchor" href="#eric-simons-ceo-of-stackblitz" aria-label="Permalink to “Eric Simons, CEO of StackBlitz:”">​</a></h4><blockquote><p>Oxc is slept on rn</p><p>Most JS/TS toolchains will be using it within the next few yrs imo</p></blockquote><h4 id="miles-johnson-creator-of-moonrepo" tabindex="-1"><a href="https://x.com/mileswjohnson/status/1734698340791800283" target="_blank" rel="noreferrer">Miles Johnson</a>, creator of <a href="https://moonrepo.dev" target="_blank" rel="noreferrer">Moonrepo</a>: <a class="header-anchor" href="#miles-johnson-creator-of-moonrepo" aria-label="Permalink to “Miles Johnson, creator of Moonrepo:”">​</a></h4><blockquote><p>It&#39;s crazy how good oxlint (and oxc tools) is. Not just in performance, but ease of use. Banking on Rust was a good choice!</p></blockquote><h4 id="joe-savona-react-team-member" tabindex="-1"><a href="https://x.com/en_JS/status/1676467920334094336" target="_blank" rel="noreferrer">Joe Savona</a>, <a href="https://react.dev" target="_blank" rel="noreferrer">React</a> team member: <a class="header-anchor" href="#joe-savona-react-team-member" aria-label="Permalink to “Joe Savona, React team member:”">​</a></h4><blockquote><p>For…reasons I am experimenting w various Rust-based JS compilers. I don’t agree w every design decision but overall oxc is really well done.</p></blockquote><h4 id="sathya-gunasekaran-react-team-member" tabindex="-1"><a href="https://x.com/_gsathya/status/1676453430263701506" target="_blank" rel="noreferrer">Sathya Gunasekaran</a>, <a href="https://react.dev" target="_blank" rel="noreferrer">React</a> team member: <a class="header-anchor" href="#sathya-gunasekaran-react-team-member" aria-label="Permalink to “Sathya Gunasekaran, React team member:”">​</a></h4><blockquote><p>oxc is kinda neat</p></blockquote><h2 id="special-thanks" tabindex="-1">Special Thanks <a class="header-anchor" href="#special-thanks" aria-label="Permalink to “Special Thanks”">​</a></h2><ul><li><a href="https://biomejs.dev" target="_blank" rel="noreferrer">Biome</a> and <a href="https://beta.ruff.rs" target="_blank" rel="noreferrer">Ruff</a>: This project would not exist without the help, inspiration, and encouragement from these two projects, who are pioneers in the field of Rust-based unified toolchains.</li><li><a href="https://quick-lint-js.com/" target="_blank" rel="noreferrer">quick-lint-js</a> and <a href="https://package.elm-lang.org/packages/jfmengels/elm-review/latest/" target="_blank" rel="noreferrer">elm-review</a>: For educating how static analysis could be improved in both performance and usability.</li></ul>`,24)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};