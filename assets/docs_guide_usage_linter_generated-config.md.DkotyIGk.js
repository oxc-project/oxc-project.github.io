import{O as e,p as t,u as n}from"./chunks/runtime-core.esm-bundler.DoAIpvg0.js";import{t as r}from"./chunks/plugin-vue_export-helper.BIFBW11O.js";const i=JSON.parse(`{"title":"Oxlint Configuration File","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Oxlint Configuration File"}],["meta",{"name":"twitter:title","content":"Oxlint Configuration File"}],["meta",{"property":"og:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"name":"twitter:description","content":"A collection of high-performance JavaScript tools written in Rust"}],["meta",{"property":"og:url","content":"https://oxc.rs/docs/guide/usage/linter/generated-config.html"}]]},"headers":[],"relativePath":"docs/guide/usage/linter/generated-config.md","filePath":"docs/guide/usage/linter/generated-config.md"}`);var a={name:`docs/guide/usage/linter/generated-config.md`};function o(r,i,a,o,s,c){return e(),n(`div`,null,[...i[0]||=[t(`<h1 id="oxlint-configuration-file" tabindex="-1">Oxlint Configuration File <a class="header-anchor" href="#oxlint-configuration-file" aria-label="Permalink to “Oxlint Configuration File”">​</a></h1><p>This configuration is aligned with ESLint v8&#39;s configuration schema (<code>eslintrc.json</code>).</p><p>Usage: <code>oxlint -c oxlintrc.json --import-plugin</code></p><div class="danger custom-block"><p class="custom-block-title">NOTE</p><p>Only the <code>.json</code> format is supported. You can use comments in configuration files.</p></div><p>Example</p><p><code>.oxlintrc.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./node_modules/oxlint/configuration_schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;typescript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;unicorn&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;browser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;globals&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;readonly&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {},</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;eqeqeq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;warn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;import/no-cycle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;react/self-closing-comp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;overrides&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;*.test.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;*.spec.ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;@typescript-eslint/no-explicit-any&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;off&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="categories" tabindex="-1">categories <a class="header-anchor" href="#categories" aria-label="Permalink to “categories”">​</a></h2><p>type: <code>object</code></p><p>Configure an entire category of rules all at once.</p><p>Rules enabled or disabled this way will be overwritten by individual rules in the <code>rules</code> field.</p><p>Example</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./node_modules/oxlint/configuration_schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;categories&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;correctness&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;warn&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;eslint/no-unused-vars&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="categories-correctness" tabindex="-1">categories.correctness <a class="header-anchor" href="#categories-correctness" aria-label="Permalink to “categories.correctness”">​</a></h3><h3 id="categories-nursery" tabindex="-1">categories.nursery <a class="header-anchor" href="#categories-nursery" aria-label="Permalink to “categories.nursery”">​</a></h3><h3 id="categories-pedantic" tabindex="-1">categories.pedantic <a class="header-anchor" href="#categories-pedantic" aria-label="Permalink to “categories.pedantic”">​</a></h3><h3 id="categories-perf" tabindex="-1">categories.perf <a class="header-anchor" href="#categories-perf" aria-label="Permalink to “categories.perf”">​</a></h3><h3 id="categories-restriction" tabindex="-1">categories.restriction <a class="header-anchor" href="#categories-restriction" aria-label="Permalink to “categories.restriction”">​</a></h3><h3 id="categories-style" tabindex="-1">categories.style <a class="header-anchor" href="#categories-style" aria-label="Permalink to “categories.style”">​</a></h3><h3 id="categories-suspicious" tabindex="-1">categories.suspicious <a class="header-anchor" href="#categories-suspicious" aria-label="Permalink to “categories.suspicious”">​</a></h3><h2 id="env" tabindex="-1">env <a class="header-anchor" href="#env" aria-label="Permalink to “env”">​</a></h2><p>type: <code>Record&lt;string, boolean&gt;</code></p><p>Predefine global variables.</p><p>Environments specify what global variables are predefined. See <a href="https://eslint.org/docs/v8.x/use/configure/language-options#specifying-environments" target="_blank" rel="noreferrer">ESLint&#39;s list of environments</a> for what environments are available and what each one provides.</p><h2 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to “extends”">​</a></h2><p>type: <code>string[]</code></p><p>Paths of configuration files that this configuration file extends (inherits from). The files are resolved relative to the location of the configuration file that contains the <code>extends</code> property. The configuration files are merged from the first to the last, with the last file overriding the previous ones.</p><h2 id="globals" tabindex="-1">globals <a class="header-anchor" href="#globals" aria-label="Permalink to “globals”">​</a></h2><p>type: <code>Record&lt;string, string&gt;</code></p><p>Add or remove global variables.</p><p>For each global variable, set the corresponding value equal to <code>&quot;writable&quot;</code> to allow the variable to be overwritten or <code>&quot;readonly&quot;</code> to disallow overwriting.</p><p>Globals can be disabled by setting their value to <code>&quot;off&quot;</code>. For example, in an environment where most Es2015 globals are available but <code>Promise</code> is unavailable, you might use this config:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./node_modules/oxlint/configuration_schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;es6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;globals&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Promise&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;off&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>You may also use <code>&quot;readable&quot;</code> or <code>false</code> to represent <code>&quot;readonly&quot;</code>, and <code>&quot;writeable&quot;</code> or <code>true</code> to represent <code>&quot;writable&quot;</code>.</p><h2 id="ignorepatterns" tabindex="-1">ignorePatterns <a class="header-anchor" href="#ignorepatterns" aria-label="Permalink to “ignorePatterns”">​</a></h2><p>type: <code>string[]</code></p><p>default: <code>[]</code></p><p>Globs to ignore during linting. These are resolved from the configuration file path.</p><h2 id="jsplugins" tabindex="-1">jsPlugins <a class="header-anchor" href="#jsplugins" aria-label="Permalink to “jsPlugins”">​</a></h2><p>type: <code>string[]</code></p><p>JS plugins.</p><p>Note: JS plugins are experimental and not subject to semver. They are not supported in language server at present.</p><h2 id="overrides" tabindex="-1">overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to “overrides”">​</a></h2><p>type: <code>array</code></p><h3 id="overrides-n" tabindex="-1">overrides[n] <a class="header-anchor" href="#overrides-n" aria-label="Permalink to “overrides[n]”">​</a></h3><p>type: <code>object</code></p><h4 id="overrides-n-files" tabindex="-1">overrides[n].files <a class="header-anchor" href="#overrides-n-files" aria-label="Permalink to “overrides[n].files”">​</a></h4><p>type: <code>string[]</code></p><p>A set of glob patterns.</p><h4 id="overrides-n-jsplugins" tabindex="-1">overrides[n].jsPlugins <a class="header-anchor" href="#overrides-n-jsplugins" aria-label="Permalink to “overrides[n].jsPlugins”">​</a></h4><p>type: <code>string[]</code></p><p>JS plugins for this override.</p><p>Note: JS plugins are experimental and not subject to semver. They are not supported in language server at present.</p><h4 id="overrides-n-rules" tabindex="-1">overrides[n].rules <a class="header-anchor" href="#overrides-n-rules" aria-label="Permalink to “overrides[n].rules”">​</a></h4><p>type: <code>object</code></p><p>See <a href="https://oxc.rs/docs/guide/usage/linter/rules.html" target="_blank" rel="noreferrer">Oxlint Rules</a></p><h2 id="rules" tabindex="-1">rules <a class="header-anchor" href="#rules" aria-label="Permalink to “rules”">​</a></h2><p>type: <code>object</code></p><p>See <a href="https://oxc.rs/docs/guide/usage/linter/rules.html" target="_blank" rel="noreferrer">Oxlint Rules</a></p><h2 id="settings" tabindex="-1">settings <a class="header-anchor" href="#settings" aria-label="Permalink to “settings”">​</a></h2><p>type: <code>object</code></p><p>Configure the behavior of linter plugins.</p><p>Here&#39;s an example if you&#39;re using Next.js in a monorepo:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;next&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;rootDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apps/dashboard/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;linkComponents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;linkAttribute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;to&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;jsx-a11y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="settings-jsdoc" tabindex="-1">settings.jsdoc <a class="header-anchor" href="#settings-jsdoc" aria-label="Permalink to “settings.jsdoc”">​</a></h3><p>type: <code>object</code></p><h4 id="settings-jsdoc-augmentsextendsreplacesdocs" tabindex="-1">settings.jsdoc.augmentsExtendsReplacesDocs <a class="header-anchor" href="#settings-jsdoc-augmentsextendsreplacesdocs" aria-label="Permalink to “settings.jsdoc.augmentsExtendsReplacesDocs”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>Only for <code>require-(yields|returns|description|example|param|throws)</code> rule</p><h4 id="settings-jsdoc-exemptdestructuredrootsfromchecks" tabindex="-1">settings.jsdoc.exemptDestructuredRootsFromChecks <a class="header-anchor" href="#settings-jsdoc-exemptdestructuredrootsfromchecks" aria-label="Permalink to “settings.jsdoc.exemptDestructuredRootsFromChecks”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>Only for <code>require-param-type</code> and <code>require-param-description</code> rule</p><h4 id="settings-jsdoc-ignoreinternal" tabindex="-1">settings.jsdoc.ignoreInternal <a class="header-anchor" href="#settings-jsdoc-ignoreinternal" aria-label="Permalink to “settings.jsdoc.ignoreInternal”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>For all rules but NOT apply to <code>empty-tags</code> rule</p><h4 id="settings-jsdoc-ignoreprivate" tabindex="-1">settings.jsdoc.ignorePrivate <a class="header-anchor" href="#settings-jsdoc-ignoreprivate" aria-label="Permalink to “settings.jsdoc.ignorePrivate”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>For all rules but NOT apply to <code>check-access</code> and <code>empty-tags</code> rule</p><h4 id="settings-jsdoc-ignorereplacesdocs" tabindex="-1">settings.jsdoc.ignoreReplacesDocs <a class="header-anchor" href="#settings-jsdoc-ignorereplacesdocs" aria-label="Permalink to “settings.jsdoc.ignoreReplacesDocs”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>true</code></p><p>Only for <code>require-(yields|returns|description|example|param|throws)</code> rule</p><h4 id="settings-jsdoc-implementsreplacesdocs" tabindex="-1">settings.jsdoc.implementsReplacesDocs <a class="header-anchor" href="#settings-jsdoc-implementsreplacesdocs" aria-label="Permalink to “settings.jsdoc.implementsReplacesDocs”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>Only for <code>require-(yields|returns|description|example|param|throws)</code> rule</p><h4 id="settings-jsdoc-overridereplacesdocs" tabindex="-1">settings.jsdoc.overrideReplacesDocs <a class="header-anchor" href="#settings-jsdoc-overridereplacesdocs" aria-label="Permalink to “settings.jsdoc.overrideReplacesDocs”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>true</code></p><p>Only for <code>require-(yields|returns|description|example|param|throws)</code> rule</p><h4 id="settings-jsdoc-tagnamepreference" tabindex="-1">settings.jsdoc.tagNamePreference <a class="header-anchor" href="#settings-jsdoc-tagnamepreference" aria-label="Permalink to “settings.jsdoc.tagNamePreference”">​</a></h4><p>type: <code>object</code></p><p>default: <code>{}</code></p><h3 id="settings-jsx-a11y" tabindex="-1">settings.jsx-a11y <a class="header-anchor" href="#settings-jsx-a11y" aria-label="Permalink to “settings.jsx-a11y”">​</a></h3><p>type: <code>object</code></p><p>Configure JSX A11y plugin rules.</p><p>See <a href="https://github.com/jsx-eslint/eslint-plugin-jsx-a11y#configurations" target="_blank" rel="noreferrer">eslint-plugin-jsx-a11y</a>&#39;s configuration for a full reference.</p><h4 id="settings-jsx-a11y-attributes" tabindex="-1">settings.jsx-a11y.attributes <a class="header-anchor" href="#settings-jsx-a11y-attributes" aria-label="Permalink to “settings.jsx-a11y.attributes”">​</a></h4><p>type: <code>Record&lt;string, array&gt;</code></p><p>default: <code>{}</code></p><p>Map of attribute names to their DOM equivalents. This is useful for non-React frameworks that use different attribute names.</p><p>Example:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;jsx-a11y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;attributes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;for&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;htmlFor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;for&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="settings-jsx-a11y-components" tabindex="-1">settings.jsx-a11y.components <a class="header-anchor" href="#settings-jsx-a11y-components" aria-label="Permalink to “settings.jsx-a11y.components”">​</a></h4><p>type: <code>Record&lt;string, string&gt;</code></p><p>default: <code>{}</code></p><p>To have your custom components be checked as DOM elements, you can provide a mapping of your component names to the DOM element name.</p><p>Example:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;jsx-a11y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;IconButton&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="settings-jsx-a11y-polymorphicpropname" tabindex="-1">settings.jsx-a11y.polymorphicPropName <a class="header-anchor" href="#settings-jsx-a11y-polymorphicpropname" aria-label="Permalink to “settings.jsx-a11y.polymorphicPropName”">​</a></h4><p>type: <code>[ string, null ]</code></p><p>An optional setting that define the prop your code uses to create polymorphic components. This setting will be used to determine the element type in rules that require semantic context.</p><p>For example, if you set the <code>polymorphicPropName</code> to <code>as</code>, then this element:</p><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Box</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span></code></pre></div><p>Will be treated as an <code>h3</code>. If not set, this component will be treated as a <code>Box</code>.</p><h3 id="settings-next" tabindex="-1">settings.next <a class="header-anchor" href="#settings-next" aria-label="Permalink to “settings.next”">​</a></h3><p>type: <code>object</code></p><p>Configure Next.js plugin rules.</p><h4 id="settings-next-rootdir" tabindex="-1">settings.next.rootDir <a class="header-anchor" href="#settings-next-rootdir" aria-label="Permalink to “settings.next.rootDir”">​</a></h4><h3 id="settings-react" tabindex="-1">settings.react <a class="header-anchor" href="#settings-react" aria-label="Permalink to “settings.react”">​</a></h3><p>type: <code>object</code></p><p>Configure React plugin rules.</p><p>Derived from <a href="https://github.com/jsx-eslint/eslint-plugin-react#configuration-legacy-eslintrc-" target="_blank" rel="noreferrer">eslint-plugin-react</a></p><h4 id="settings-react-formcomponents" tabindex="-1">settings.react.formComponents <a class="header-anchor" href="#settings-react-formcomponents" aria-label="Permalink to “settings.react.formComponents”">​</a></h4><p>type: <code>array</code></p><p>default: <code>[]</code></p><p>Components used as alternatives to <code>&lt;form&gt;</code> for forms, such as <code>&lt;Formik&gt;</code>.</p><p>Example:</p><div class="language-jsonc"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;formComponents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;CustomForm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // OtherForm is considered a form component and has an endpoint attribute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OtherForm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;formAttribute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;endpoint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // allows specifying multiple properties if necessary</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Form&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;formAttribute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registerEndpoint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loginEndpoint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="settings-react-formcomponents-n" tabindex="-1">settings.react.formComponents[n] <a class="header-anchor" href="#settings-react-formcomponents-n" aria-label="Permalink to “settings.react.formComponents[n]”">​</a></h5><h4 id="settings-react-linkcomponents" tabindex="-1">settings.react.linkComponents <a class="header-anchor" href="#settings-react-linkcomponents" aria-label="Permalink to “settings.react.linkComponents”">​</a></h4><p>type: <code>array</code></p><p>default: <code>[]</code></p><p>Components used as alternatives to <code>&lt;a&gt;</code> for linking, such as <code>&lt;Link&gt;</code>.</p><p>Example:</p><div class="language-jsonc"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;linkComponents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;HyperLink&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Use \`linkAttribute\` for components that use a different prop name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // than \`href\`.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyLink&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;linkAttribute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // allows specifying multiple properties if necessary</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;linkAttribute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;href&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="settings-react-linkcomponents-n" tabindex="-1">settings.react.linkComponents[n] <a class="header-anchor" href="#settings-react-linkcomponents-n" aria-label="Permalink to “settings.react.linkComponents[n]”">​</a></h5><h3 id="settings-vitest" tabindex="-1">settings.vitest <a class="header-anchor" href="#settings-vitest" aria-label="Permalink to “settings.vitest”">​</a></h3><p>type: <code>object</code></p><p>Configure Vitest plugin rules.</p><p>See <a href="https://github.com/veritem/eslint-plugin-vitest" target="_blank" rel="noreferrer">eslint-plugin-vitest</a>&#39;s configuration for a full reference.</p><h4 id="settings-vitest-typecheck" tabindex="-1">settings.vitest.typecheck <a class="header-anchor" href="#settings-vitest-typecheck" aria-label="Permalink to “settings.vitest.typecheck”">​</a></h4><p>type: <code>boolean</code></p><p>default: <code>false</code></p><p>Whether to enable typecheck mode for Vitest rules. When enabled, some rules will skip certain checks for describe blocks to accommodate TypeScript type checking scenarios.</p>`,149)]])}var s=r(a,[[`render`,o]]);export{i as __pageData,s as default};